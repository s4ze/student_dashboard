// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using courses.Data;

#nullable disable

namespace courses.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241227183318_5Migration")]
    partial class _5Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("courses.Models.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("VARCHAR(25)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("courses.Models.Enrollment", b =>
                {
                    b.Property<Guid>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid");

                    b.Property<string>("EnrollmentDate")
                        .IsRequired()
                        .HasColumnType("VARCHAR(25)");

                    b.Property<float>("Grade")
                        .HasColumnType("NUMERIC(5,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("courses.Models.Schedule", b =>
                {
                    b.Property<Guid>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("ScheduleId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("courses.Models.Enrollment", b =>
                {
                    b.HasOne("courses.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("courses.Models.Schedule", b =>
                {
                    b.OwnsOne("courses.Models.LessonDay", "Friday", b1 =>
                        {
                            b1.Property<Guid>("ScheduleId")
                                .HasColumnType("uuid");

                            b1.HasKey("ScheduleId");

                            b1.ToTable("Schedules");

                            b1.ToJson("Friday");

                            b1.WithOwner()
                                .HasForeignKey("ScheduleId");

                            b1.OwnsOne("courses.Models.Lesson", "Lesson1", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson2", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson3", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson4", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson5", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.Navigation("Lesson1");

                            b1.Navigation("Lesson2");

                            b1.Navigation("Lesson3");

                            b1.Navigation("Lesson4");

                            b1.Navigation("Lesson5");
                        });

                    b.OwnsOne("courses.Models.LessonDay", "Monday", b1 =>
                        {
                            b1.Property<Guid>("ScheduleId")
                                .HasColumnType("uuid");

                            b1.HasKey("ScheduleId");

                            b1.ToTable("Schedules");

                            b1.ToJson("Monday");

                            b1.WithOwner()
                                .HasForeignKey("ScheduleId");

                            b1.OwnsOne("courses.Models.Lesson", "Lesson1", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson2", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson3", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson4", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson5", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.Navigation("Lesson1");

                            b1.Navigation("Lesson2");

                            b1.Navigation("Lesson3");

                            b1.Navigation("Lesson4");

                            b1.Navigation("Lesson5");
                        });

                    b.OwnsOne("courses.Models.LessonDay", "Saturday", b1 =>
                        {
                            b1.Property<Guid>("ScheduleId")
                                .HasColumnType("uuid");

                            b1.HasKey("ScheduleId");

                            b1.ToTable("Schedules");

                            b1.ToJson("Saturday");

                            b1.WithOwner()
                                .HasForeignKey("ScheduleId");

                            b1.OwnsOne("courses.Models.Lesson", "Lesson1", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson2", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson3", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson4", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson5", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.Navigation("Lesson1");

                            b1.Navigation("Lesson2");

                            b1.Navigation("Lesson3");

                            b1.Navigation("Lesson4");

                            b1.Navigation("Lesson5");
                        });

                    b.OwnsOne("courses.Models.LessonDay", "Thursday", b1 =>
                        {
                            b1.Property<Guid>("ScheduleId")
                                .HasColumnType("uuid");

                            b1.HasKey("ScheduleId");

                            b1.ToTable("Schedules");

                            b1.ToJson("Thursday");

                            b1.WithOwner()
                                .HasForeignKey("ScheduleId");

                            b1.OwnsOne("courses.Models.Lesson", "Lesson1", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson2", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson3", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson4", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson5", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.Navigation("Lesson1");

                            b1.Navigation("Lesson2");

                            b1.Navigation("Lesson3");

                            b1.Navigation("Lesson4");

                            b1.Navigation("Lesson5");
                        });

                    b.OwnsOne("courses.Models.LessonDay", "Tuesday", b1 =>
                        {
                            b1.Property<Guid>("ScheduleId")
                                .HasColumnType("uuid");

                            b1.HasKey("ScheduleId");

                            b1.ToTable("Schedules");

                            b1.ToJson("Tuesday");

                            b1.WithOwner()
                                .HasForeignKey("ScheduleId");

                            b1.OwnsOne("courses.Models.Lesson", "Lesson1", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson2", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson3", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson4", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson5", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.Navigation("Lesson1");

                            b1.Navigation("Lesson2");

                            b1.Navigation("Lesson3");

                            b1.Navigation("Lesson4");

                            b1.Navigation("Lesson5");
                        });

                    b.OwnsOne("courses.Models.LessonDay", "Wednesday", b1 =>
                        {
                            b1.Property<Guid>("ScheduleId")
                                .HasColumnType("uuid");

                            b1.HasKey("ScheduleId");

                            b1.ToTable("Schedules");

                            b1.ToJson("Wednesday");

                            b1.WithOwner()
                                .HasForeignKey("ScheduleId");

                            b1.OwnsOne("courses.Models.Lesson", "Lesson1", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson2", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson3", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson4", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.OwnsOne("courses.Models.Lesson", "Lesson5", b2 =>
                                {
                                    b2.Property<Guid>("LessonDayScheduleId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Classroom")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Course")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<char>("Form")
                                        .HasColumnType("character(1)");

                                    b2.Property<string>("Professor")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LessonDayScheduleId");

                                    b2.ToTable("Schedules");

                                    b2.WithOwner()
                                        .HasForeignKey("LessonDayScheduleId");
                                });

                            b1.Navigation("Lesson1");

                            b1.Navigation("Lesson2");

                            b1.Navigation("Lesson3");

                            b1.Navigation("Lesson4");

                            b1.Navigation("Lesson5");
                        });

                    b.Navigation("Friday");

                    b.Navigation("Monday");

                    b.Navigation("Saturday");

                    b.Navigation("Thursday");

                    b.Navigation("Tuesday");

                    b.Navigation("Wednesday");
                });
#pragma warning restore 612, 618
        }
    }
}
